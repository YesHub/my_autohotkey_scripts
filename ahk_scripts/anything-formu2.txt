
some little example ,show how to use anything.ahk
anything-example2.ahk
[code]
#include anything.ahk

action4source1(candidate)
{
MsgBox , you have selected: %candidate%
}

getCandidates()
{
candidates:=Array("red","green")
return candidates
}

source1 :=Object()
;;"candidate" can be a function name ,
;;the function must return an array
;;"action" is a function accept one parameter
;;the parameter is your selected candidate
;;"name" is just a name show behind each candidate

;; when you select a candidate , "Anything" will execute the 
;; "action" function on your selected candidate 
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
f1::anything(source1)
[/code]
anything-example3.ahk
[code]
#include anything.ahk

action4source1(candidate)
{
  Msgbox, you have selected: %candidate%
}

source1 :=Object()
;;this example is the same to anything-example2.ahk
;;except : 
;;candidates can be an array
;;
candidates:=Array("red","green")
source1["candidate"]:=candidates

source1["action"]:="action4source1"
source1["name"]:="example2"

f1::anything(source1)
[/code]
anything-example4.ahk

[code]
#include anything.ahk
;;anything support multiply sources
;; the candidate from different source will execute different action 
;; when you select it .
;;
;; and Ctrl-o  will send the candidates of first source to Last 
action4source1( candidate)
{
msgbox, you have selected: %candidate% from source111111111
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}

source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="source1"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

action4source2(candidate)
{
msgbox, you have selected: %candidate% from source22222222222
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="source2"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

action4source3(candidate)
{
display:=candidate[1]
real:=candidate[2]
msgbox, you have selected: %display%, the price is %real%
}


getCandidates3()
{
  candidates:=Array()
  book:=Object()
  book.insert("book111111111")
  book.insert("$10.0")
  
  pen:=Object()
  pen.insert("pen22222222222")
  pen.insert("$3.0")
  
  candidates.insert(book)
 candidates.insert(pen)
  return candidates
}
    
source3 :=Object()
source3["candidate"]:="getCandidates3"
source3["action"]:="action4source3"
source3["name"]:="source3"


sources:= Array()
sources.insert(source1)
sources.insert(source2)
sources.insert(source3)

f1::anything_multiple_sources(sources)


[/code]
anything-example5.ahk

[code]
#include anything.ahk
;;multiple actions for one source
;;Enter execute default action
;;Ctrl-j execute second action
;;Ctrl-m execute third action
;;Tab list all available action for the selected candidate
action4source1(candidate)
{
  Msgbox, you have selected: %candidate%
}
action24source1(candidate)
{
  Msgbox, you have selected: %candidate% ,and execute 2th action
  
}
action34source1(candidate)
{
  Msgbox, you have selected: %candidate% ,and execute 3th action 
}

source1 :=Object()
;;candidates can be an array
candidates:=Array("red","green")
source1["candidate"]:=candidates

actions:=Array("action4source1" ,"action24source1","action34source1")
source1["action"]:=actions
source1["name"]:="example5"
f1::anything(source1)


[/code]
anything-example6.ahk
[code]
#include anything.ahk

;;each element of candidates can be an array ,
;;the length of the array is 2 , 
;; first element of array will be displayed on listview and
;;be used to match user's search string .
;; the second element of array can be anything .you can store usefull info here .
;; and it can be passed to "action" function
;;
action4source1(candidate)
{
  display :=candidate[1]
   real :=   candidate[2]
   MsgBox , the display on listview is <%display%> ,and the real  useful info. is <%real%> 
}

getCandidates()
{
  candidates:=Array()
  red:=Array()
  red.insert("red")
  red.insert("reddddddd")
  candidates.insert(red)
  
  green:=Array()
  green.insert("gree")
  green.insert("ggggggggggggg")
  candidates.insert(green)
  
  return candidates
}

source1 :=Object()
;;candidate can be a function name ,
;;the function must return an array 
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
f1::anything(source1)


[/code]
anything-example7.ahk
[code]
#include anything.ahk

;;you can set properties for "Anything" by callling 
;; another function
;;        anything_multiple_sources_with_properties(sources,anything_properties)
;; or
;;      anything_with_properties(source ,anything_properties)
;; about anything_properties ,see
;;               default_anything_properties 
;; in  anything.ahk ,you can overwrite properties defined there .


action4source1( candidate)
{
msgbox, you have selected: %candidate% from source1 
}


action4source2(candidate)
{
msgbox, you have selected: %candidate% for source2
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}
  
source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="1111111"

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="22222222222"


sources:= Array()
sources.insert(source1)
sources.insert(source2)

anything_properties:=Object()
anything_properties["quit_when_lose_focus"]:="no"
anything_properties["win_width"]:="600"
anything_properties["win_height"]:="300"

f1::anything_multiple_sources_with_properties(sources,anything_properties)



[/code]
anything-example8.ahk
[code]
#include anything.ahk

;;you can set properties for "Anything" by callling 
;; another function
;;        anything_multiple_sources_with_properties(sources,anything_properties)
;; or
;;      anything_with_properties(source ,anything_properties)
;; about anything_properties ,see
;;               default_anything_properties 
;; in  anything.ahk ,you can overwrite properties defined there .
;;
;; and there is a property named "no_candidate_action"
;; the value of this property is a function accept one parameter
;; the default value is 
;; default_anything_properties["no_candidate_action"]:="anything_do_nothing"
;; that means when no candidates matched your search string ,and you press 
;; "Ctrl-i" key ,then this function will be called ,and the search string 
;; will be the parameter 


;;one more  ,even there are matched candidates ,you can 
;; still pass the "search string" to this function 
;; by Ctrl-i


action4source1( candidate)
{
msgbox, you have selected: %candidate% from source1 
}


action4source2(candidate)
{
msgbox, you have selected: %candidate% for source2
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}
  
source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="1111111"

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="22222222222"


sources:= Array()
sources.insert(source1)
sources.insert(source2)

anything_properties:=Object()
anything_properties["no_candidate_action"]:="do_what_you_want_when_no_matched_candidates"

do_what_you_want_when_no_matched_candidates(candidate)
{
MsgBox ,do what you want when no matech candidates ,with your search string : "%candidate%"
}

f1::anything_multiple_sources_with_properties(sources,anything_properties)



[/code]
anything-example9.ahk
[code]
#include anything.ahk
;;support icon 
action4source1(candidate)
{
  MsgBox , you have selected: %candidate%
}

getCandidates()
{
  candidates:=Array("red","green","blue")
  return candidates
}
icon()
{
  ImageListID := IL_Create(10)  ; Create an ImageList to hold 10 small icons.
Loop 10  ; Load the ImageList with a series of icons from the DLL.
    IL_Add(ImageListID, "shell32.dll", A_Index)
    return ImageListID
}

source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
source1["icon"]:="icon"
f1::anything(source1)
[/code]
