
anything-favorite-directories.ahk

[code]

;;; anything-favorites-directory.ahk  --- visit your favorites directories by anything.ahk

; if you use anything-favorites-directory as the only source for anything.ahk
; you just need to bind it to a key like this :

; #include anything-favorites-directory.ahk
; f1::anything(anything_favorite_directories_source)
;
; if you also use other sources ,just need add "anything_favorite_directories_source" to 
; the array of sources for anything_multiple_sources(sources)
;
; 1 how to add a new Folder to your favorite-directories
; first activate "Anything" and Press <Ctrl-L> list all available actions
; select "call action: Favdirs.anything_favorite_directories_add "
;
; 2 then you can use "Anything" selected one of your favorite directory 
;   it will visit it in current Explorer.exe (if current activated window is Explorer.exe)
;   it will visit it in current cmd.exe (if current activated window is cmd.exe)
;   it will visit it in current msys.bat (if current activated window is msys.bat)
;   it will visit it in current Emacs (if current activated window is Emacs.exe)


;;#include anything.ahk
;;SetWorkingDir %A_ScriptDir%
anything_favorite_directories:=Array()
;;init  
IfExist, anything-favorite-directories.ini
{
iniread, favorite_line, anything-favorite-directories.ini, main, favorites
Loop, Parse, favorite_line,,
   {
     if A_LoopField <>
     {
        anything_favorite_directories.insert(A_LoopField)
     }
   }
}

;;source for anything .
anything_favorite_directories_source:=Object()
anything_favorite_directories_source["candidate"]:= anything_favorite_directories
anything_favorite_directories_source["action"]:=Array("anything_favorite_directories_visit","anything_favorite_directories_delete","anything_favorite_directories_add")
anything_favorite_directories_source["name"]:="FavDirs"
;;action 
anything_favorite_directories_visit(candidate_directory)
{
   SetTitleMatchMode Regex ;

  WinGet, active_id, ID, A
;;  global active_id 
  WinGetClass, activeWinClass ,ahk_id %active_id%
  if (activeWinClass ="ExploreWClass" or activeWinClass= "CabinetWClass")
  {
		ControlSetText, Edit1, %candidate_directory%, ahk_id %active_id%
		; Tekl reported the following: "If I want to change to Folder L:\folder
		; then the addressbar shows http://www.L:\folder.com. To solve this,
		; I added a {right} before {Enter}":
		ControlSend, Edit1, {Right}{Enter}, ahk_id %active_id%
        sleep 300
        ControlFocus, SysListView321,A
        Send {Home} ;;selected first file dired
		return
  }else if (activeWinClass="ConsoleWindowClass"){
         WinGetTitle, title ,ahk_id %active_id%
         WinActivate, ahk_id %active_id% 
         SetKeyDelay, 0
         if ( InStr(title ,"MINGW32:",true))
         {
           candidate_directory:= anything_favorite_directories_win2msysPath(candidate_directory)
           SendInput, cd "%candidate_directory%"{Enter}
         }else
         {
           SendInput, cd /d "%candidate_directory%"{Enter}
         }
  }else if (activeWinClass="Emacs"){
    dired_cmd:="emacsclientw  --eval ""(dired \""" . anything_favorite_directories_win2posixPath(candidate_directory) . "\"")"" "
    Run ,%dired_cmd% ,,UseErrorLevel  ;  don't display dialog if it fails.
    if ErrorLevel = ERROR
    {
       MsgBox ,Please add you Emacs/bin path  to your Path ,and add (server-start) to you .emacs 
    }
 }else{
      Run explorer.exe   /n`, /e`,  "%candidate_directory%"
      WinWait ahk_class (CabinetWClass|ExploreWClass) 
      WinActivate
      sleep 300
      ControlFocus, SysListView321,A
      Send {Home}
   }
}
;;action 
anything_favorite_directories_delete(candidate)
{
  global anything_favorite_directories
  for key ,directory in anything_favorite_directories
  {
    if (directory = candidate)
    {
      anything_favorite_directories.remove(key)
      Break
    }
  }
    anything_favorite_directories_write2disk()
}

add2FavoriteDirectories(candidate)
{
  global anything_favorite_directories
  for key ,directory in anything_favorite_directories
  {
    if (directory = candidate)
    {
      anything_favorite_directories.remove(key)
      Break
    }
  }
  anything_favorite_directories.insert(1,candidate)
}
;;action 
anything_favorite_directories_add(unused_candidate)
{
  FileSelectFolder, newFavDir, , 3
  if newFavDir <>
  {
   add2FavoriteDirectories(newFavDir) 
  }
    anything_favorite_directories_write2disk()
}

anything_favorite_directories_write2disk()
{
  global anything_favorite_directories
  directory_text=
  for key ,directory in anything_favorite_directories
  {
    directory_text=%directory_text%%directory%
  }
  IniWrite,%directory_text%,anything-favorite-directories.ini, main, favorites
}
;;Windows Path to msys Path 
;; for example d:\a\b\ to /d/a/b
anything_favorite_directories_win2msysPath(winPath){
   msysPath:= RegExReplace(winPath, "^([a-zA-Z]):"  ,"$1" )
   StringReplace, msysPath2, msysPath, \ , /, All
   msysPath3 = /%msysPath2%
   return %msysPath3%
}

;;d:\a\b -->d:/a/b
anything_favorite_directories_win2posixPath(winPath)
{
   StringReplace, posixPath, winPath, \ , /, All
   Return posixPath  
}
;;f1::anything(anything_favorite_directories_source)
;; anything-favorites-directory.ahk ends here. 

[/code]
anything-window-switch.ahk
[code]
;;; anything-window-switch.ahk -- switch window with anything.ahk support 

; source is hosted on
; https://github.com/jixiuf/my_autohotkey_scripts/tree/master/ahk_scripts
; and you can find the forum here
; http://www.autohotkey.com/forum/viewtopic.php?t=72833

;;how to use `anything-window-switch.ahk'
;1 
; if you only have one anything-source :
;         anything_window_switcher_source      (defined in this file )
; you can use it like this :
;
;     #include anything.ahk
;     #include anything-window-switch.ahk' 
;     f3::anything(anything_window_switcher_source)
; if you want automatically switch to a window when there is only 1 search
; result showing
; you can
;     #include anything.ahk
;     #include anything-window-switch.ahk'
;     anything_window_switcher_source["anything-execute-action-at-once-if-one"]:="yes"
;     f3::anything(anything_window_switcher_source)

;
; 2  if you also have other anything-sources ,
;     you just need add
;;        anything_window_switcher_source
;     to the sources
;    for example :
;
;    f3::
;    sources:=Array()
;    sources.insert(anything_window_switcher_source)
;    sources.insert(anything_favorite_directories_source)
;    sources.insert(anything_cmd_source)
;    anything_multiple_sources(sources)
;    return

DetectHiddenWindows, off
;;candidates         
anything_ws_icon_imageListId=
anything_ws_get_win_candidates()
{
  global anything_ws_icon_imageListId
  global anything_wid
  candidates :=Array()
  WinGet, id, list, , , Program Manager
  Loop, %id%
  {
    candidate:=Array()
    StringTrimRight, this_id, id%a_index%, 0
    WinGetTitle, title, ahk_id %this_id%
    
    ; FIXME: windows with empty titles?
     if title =
       continue
       
     if anything_wid and anything_wid = this_id
     {
       continue
     }
    
    ; don't add the switcher window
    ; if switcher_id = %this_id%
    ;   continue
      display:= anything_ws_get_processname(this_id) . " _ " . title
      candidate.insert(display)
      candidate.insert(this_id)
      candidates.insert(candidate)
  }
  if(candidates.maxIndex() >1)
  {
    candidates.insert(2, candidates.remove(1))
  }
  anything_ws_icon_imageListId := IL_Create(candidates.maxIndex())  
  for key,candidate in candidates
  {
   this_id:= candidate[2]
   anything_add_window_icon_2_imageList(this_id,0,anything_ws_icon_imageListId)
  }
  return candidates 
}

;;default action : visit selected window
anything_ws_visit(candidate)
{
  win_id:=candidate[2]
  WinActivate ,ahk_id  %win_id%
}
anything_ws_close(candidate)
{
  win_id:=candidate[2]
  WinClose ,ahk_id  %win_id%
}

; (window id, whether to get large icons,ImageListId where to store icon)
anything_add_window_icon_2_imageList(wid, Use_Large_Icons_Current,ImageListId) 
{
  Local NR_temp, h_icon
  ; check status of window - if window is responding or "Not Responding"
  NR_temp =0 ; init
  h_icon =
  Responding := DllCall("SendMessageTimeout", "UInt", wid, "UInt", 0x0, "Int", 0, "Int", 0, "UInt", 0x2, "UInt", 150, "UInt *", NR_temp) ; 150 = timeout in millisecs
  If (Responding)
    {
    ; WM_GETICON values -    ICON_SMALL =0,   ICON_BIG =1,   ICON_SMALL2 =2
    If Use_Large_Icons_Current =1
      {
      SendMessage, 0x7F, 1, 0,, ahk_id %wid%
      h_icon := ErrorLevel
      }
    If ( ! h_icon )
      {
      SendMessage, 0x7F, 2, 0,, ahk_id %wid%
      h_icon := ErrorLevel
        If ( ! h_icon )
          {
          SendMessage, 0x7F, 0, 0,, ahk_id %wid%
          h_icon := ErrorLevel
          If ( ! h_icon )
            {
            If Use_Large_Icons_Current =1
              h_icon := DllCall( "GetClassLong", "uint", wid, "int", -14 ) ; GCL_HICON is -14
            If ( ! h_icon )
              {
              h_icon := DllCall( "GetClassLong", "uint", wid, "int", -34 ) ; GCL_HICONSM is -34
              If ( ! h_icon )
                h_icon := DllCall( "LoadIcon", "uint", 0, "uint", 32512 ) ; IDI_APPLICATION is 32512
              }
            }
          }
        }
      }
  If ! ( h_icon = "" or h_icon = "FAIL") ; Add the HICON directly to the icon list
  	 DllCall("ImageList_ReplaceIcon", UInt, ImageListId, Int, -1, UInt, h_icon)
  Else	; use a generic icon
  	 IL_Add(ImageListId, "shell32.dll" , 3)
}

anything_ws_get_icon()
{
global
  return anything_ws_icon_imageListId
}
anything_ws_get_processname(wid){
       ; show process name if enabled
           WinGet, procname, ProcessName, ahk_id %wid%
           stringgetpos, pos, procname, .
           if ErrorLevel <> 1
           {
               stringleft, procname, procname, %pos%
           }
           stringupper, procname, procname
    return procname
}

anything_window_switcher_source:=Object()
anything_window_switcher_source["candidate"]:="anything_ws_get_win_candidates"
anything_window_switcher_source["name"]:="Win"
anything_window_switcher_source["icon"]:="anything_ws_get_icon"
anything_window_switcher_source["action"]:=Array("anything_ws_visit", "anything_ws_close")

[/code]
anything-config.ahk

[code]
#NoTrayIcon
#SingleInstance force
SetWorkingDir %A_ScriptDir%

#include anything.ahk
#include anything-run.ahk
#include anything-favorite-directories.ahk
#include anything-window-switch.ahk
#include anything-explorer-history.ahk

f3::
sources:=Array()
sources.insert(anything_explorer_history_source)
sources.insert(anything_favorite_directories_source)
sources.insert(anything_cmd_source)
sources.insert(anything_window_switcher_source)
anything_multiple_sources(sources)
return

#r::
sources:=Array()
sources.insert(anything_cmd_source)
sources.insert(anything_explorer_history_source)
sources.insert(anything_favorite_directories_source)
sources.insert(anything_window_switcher_source)
anything_multiple_sources(sources)
return

;;
!Tab::
^Tab:: 
sources:=Array()
sources.insert(anything_window_switcher_source)
sources.insert(anything_cmd_source)
sources.insert(anything_explorer_history_source)
sources.insert(anything_favorite_directories_source)
anything_multiple_sources(sources)
return
[/code]

=============================================
some little example ,show how to use anything.ahk
anything-example2.ahk
[code]
#include anything.ahk

action4source1(candidate)
{
MsgBox , you have selected: %candidate%
}

getCandidates()
{
candidates:=Array("red","green")
return candidates
}

source1 :=Object()
;;"candidate" can be a function name ,
;;the function must return an array
;;"action" is a function accept one parameter
;;the parameter is your selected candidate
;;"name" is just a name show behind each candidate

;; when you select a candidate , "Anything" will execute the 
;; "action" function on your selected candidate 
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
f1::anything(source1)
[/code]
anything-example3.ahk
[code]
#include anything.ahk

action4source1(candidate)
{
  Msgbox, you have selected: %candidate%
}

source1 :=Object()
;;this example is the same to anything-example2.ahk
;;except : 
;;candidates can be an array
;;
candidates:=Array("red","green")
source1["candidate"]:=candidates

source1["action"]:="action4source1"
source1["name"]:="example2"

f1::anything(source1)
[/code]
anything-example4.ahk

[code]
#include anything.ahk
;;anything support multiply sources
;; the candidate from different source will execute different action 
;; when you select it .
;;
;; and Ctrl-o  will send the candidates of first source to Last 
action4source1( candidate)
{
msgbox, you have selected: %candidate% from source111111111
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}

source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="source1"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

action4source2(candidate)
{
msgbox, you have selected: %candidate% from source22222222222
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="source2"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

action4source3(candidate)
{
display:=candidate[1]
real:=candidate[2]
msgbox, you have selected: %display%, the price is %real%
}


getCandidates3()
{
  candidates:=Array()
  book:=Object()
  book.insert("book111111111")
  book.insert("$10.0")
  
  pen:=Object()
  pen.insert("pen22222222222")
  pen.insert("$3.0")
  
  candidates.insert(book)
 candidates.insert(pen)
  return candidates
}
    
source3 :=Object()
source3["candidate"]:="getCandidates3"
source3["action"]:="action4source3"
source3["name"]:="source3"


sources:= Array()
sources.insert(source1)
sources.insert(source2)
sources.insert(source3)

f1::anything_multiple_sources(sources)


[/code]
anything-example5.ahk

[code]
#include anything.ahk
;;multiple actions for one source
;;Enter execute default action
;;Ctrl-j execute second action
;;Ctrl-m execute third action
;;Tab list all available action for the selected candidate
action4source1(candidate)
{
  Msgbox, you have selected: %candidate%
}
action24source1(candidate)
{
  Msgbox, you have selected: %candidate% ,and execute 2th action
  
}
action34source1(candidate)
{
  Msgbox, you have selected: %candidate% ,and execute 3th action 
}

source1 :=Object()
;;candidates can be an array
candidates:=Array("red","green")
source1["candidate"]:=candidates

actions:=Array("action4source1" ,"action24source1","action34source1")
source1["action"]:=actions
source1["name"]:="example5"
f1::anything(source1)


[/code]
anything-example6.ahk
[code]
#include anything.ahk

;;each element of candidates can be an array ,
;;the length of the array is 2 , 
;; first element of array will be displayed on listview and
;;be used to match user's search string .
;; the second element of array can be anything .you can store usefull info here .
;; and it can be passed to "action" function
;;
action4source1(candidate)
{
  display :=candidate[1]
   real :=   candidate[2]
   MsgBox , the display on listview is <%display%> ,and the real  useful info. is <%real%> 
}

getCandidates()
{
  candidates:=Array()
  red:=Array()
  red.insert("red")
  red.insert("reddddddd")
  candidates.insert(red)
  
  green:=Array()
  green.insert("gree")
  green.insert("ggggggggggggg")
  candidates.insert(green)
  
  return candidates
}

source1 :=Object()
;;candidate can be a function name ,
;;the function must return an array 
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
f1::anything(source1)


[/code]
anything-example7.ahk
[code]
#include anything.ahk

;;you can set properties for "Anything" by callling 
;; another function
;;        anything_multiple_sources_with_properties(sources,anything_properties)
;; or
;;      anything_with_properties(source ,anything_properties)
;; about anything_properties ,see
;;               default_anything_properties 
;; in  anything.ahk ,you can overwrite properties defined there .


action4source1( candidate)
{
msgbox, you have selected: %candidate% from source1 
}


action4source2(candidate)
{
msgbox, you have selected: %candidate% for source2
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}
  
source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="1111111"

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="22222222222"


sources:= Array()
sources.insert(source1)
sources.insert(source2)

anything_properties:=Object()
anything_properties["quit_when_lose_focus"]:="no"
anything_properties["win_width"]:="600"
anything_properties["win_height"]:="300"

f1::anything_multiple_sources_with_properties(sources,anything_properties)



[/code]
anything-example8.ahk
[code]
#include anything.ahk

;;you can set properties for "Anything" by callling 
;; another function
;;        anything_multiple_sources_with_properties(sources,anything_properties)
;; or
;;      anything_with_properties(source ,anything_properties)
;; about anything_properties ,see
;;               default_anything_properties 
;; in  anything.ahk ,you can overwrite properties defined there .
;;
;; and there is a property named "no_candidate_action"
;; the value of this property is a function accept one parameter
;; the default value is 
;; default_anything_properties["no_candidate_action"]:="anything_do_nothing"
;; that means when no candidates matched your search string ,and you press 
;; "Ctrl-i" key ,then this function will be called ,and the search string 
;; will be the parameter 


;;one more  ,even there are matched candidates ,you can 
;; still pass the "search string" to this function 
;; by Ctrl-i


action4source1( candidate)
{
msgbox, you have selected: %candidate% from source1 
}


action4source2(candidate)
{
msgbox, you have selected: %candidate% for source2
}

getCandidates()
{
  candidates:=Array("red","green")
  return candidates
}
getCandidates2()
{
  candidates:=Array("white","black")
  return candidates
}
  
source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="1111111"

source2 :=Object()
source2["candidate"]:="getCandidates2"
source2["action"]:="action4source2"
source2["name"]:="22222222222"


sources:= Array()
sources.insert(source1)
sources.insert(source2)

anything_properties:=Object()
anything_properties["no_candidate_action"]:="do_what_you_want_when_no_matched_candidates"

do_what_you_want_when_no_matched_candidates(candidate)
{
MsgBox ,do what you want when no matech candidates ,with your search string : "%candidate%"
}

f1::anything_multiple_sources_with_properties(sources,anything_properties)



[/code]
anything-example9.ahk
[code]
#include anything.ahk
;;support icon 
action4source1(candidate)
{
  MsgBox , you have selected: %candidate%
}

getCandidates()
{
  candidates:=Array("red","green","blue")
  return candidates
}
icon()
{
  ImageListID := IL_Create(10)  ; Create an ImageList to hold 10 small icons.
Loop 10  ; Load the ImageList with a series of icons from the DLL.
    IL_Add(ImageListID, "shell32.dll", A_Index)
    return ImageListID
}

source1 :=Object()
source1["candidate"]:="getCandidates"
source1["action"]:="action4source1"
source1["name"]:="name"
source1["icon"]:="icon"
f1::anything(source1)
[/code]
